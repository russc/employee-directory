{"version":3,"sources":["components/StyledComponents/StyledComponents.js","components/Header/Header.js","components/Notify/Notify.js","graphql.js","components/Loader/Loader.js","pages/Employees.js","routes.js","pages/Admin.js","App.js","apollo.js","index.js"],"names":["FaceCard","styled","div","_templateObject","NameSection","_templateObject2","StyledHeader","header","_templateObject3","StyledPaper","nav","_templateObject4","Paper","_templateObject5","props","height","Avatar","img","_templateObject6","SearchBar","form","_templateObject7","ScrollContainer","Grid","_templateObject8","MobileNav","_templateObject9","Header","_ref","history","children","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","react_default","a","createElement","Hidden_default","xsDown","routes","map","route","i","Link","to","path","key","style","marginRight","className","location","pathname","name","smUp","IconButton_default","color","aria-label","onClick","Menu_default","List_default","ListItem_default","push","Notify","state","_this","handleClick","setState","objectSpread","handleClose","prevProps","prevState","this","Snackbar_default","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","ContentProps","aria-describedby","message","id","React","Component","GET_EMPLOYEES","gql","graphql_templateObject","ADD_EMPLOYEE","graphql_templateObject2","UPDATE_EMPLOYEE","graphql_templateObject3","DEPARTMENTS","graphql_templateObject4","ADD_DEPARTMENT","graphql_templateObject5","ADD_POSITION","graphql_templateObject6","Placeholders","react_content_loader_es","width","speed","primaryColor","secondaryColor","cx","cy","r","x","y","rx","ry","Loader","amount","bottom","items","Array","fill","Loader_Placeholders","item","index","Fade_default","in","timeout","enter","exit","Grid_default","xs","sm","md","elevation","marginTop","container","spacing","overflowY","InfoSection","dept","position","component","text","setText","_useState3","_useState4","departmentID","setDepartmentID","_useState5","type","_useState6","dialog","setDialog","_useState7","_useState8","notify","setNotify","react","Tooltip_default","title","fi","size","react_apollo_esm","query","_ref2","departments","data","loading","error","lg","concat","placement","positions","length","Dialog_default","aria-labelledby","DialogTitle_default","mutation","update","cache","_ref3","returning","insert_departments","readQuery","writeQuery","toConsumableArray","_ref4","insert_positions","updated","findIndex","department","_returning$","__typename","console","log","add","onSubmit","e","preventDefault","variables","DialogContent_default","TextField_default","autoFocus","margin","label","fullWidth","defaultValue","onChange","target","value","DialogActions_default","Button_default","components_Notify_Notify","client","employeeList","setEmployeeList","setPositions","selected","setSelected","mode","setMode","_useState9","_useState10","setId","_useState11","_useState12","setIndex","_useState13","_useState14","offset","setOffset","_useState15","_useState16","topLoader","setTopLoader","_useState17","_useState18","bottomLoader","setBottomLoader","_useState19","_useState20","search","setSearch","_useState21","_useState22","_useState23","_useState24","email","setEmail","_useState25","_useState26","first","setFirst","_useState27","_useState28","last","setLast","_useState29","_useState30","gender","setGender","_useState31","_useState32","phone","setPhone","_useState33","_useState34","photo","setPhoto","fetchData","asyncToGenerator","regenerator_default","mark","_callee","searching","employees","employeeArray","_args","arguments","wrap","_context","prev","next","undefined","limit","sent","stop","apply","useEffect","components_Loader_Loader","variant","InputProps","startAdornment","InputAdornment_default","Close_default","document","getElementById","Search_default","disabled","onScroll","scrollHeight","scrollTop","clientHeight","employee","first_name","last_name","href","src","pic_large","alt","Employees_InfoSection","positionByPosition","departmentByDepartment","_ref5","insert_employees","setTimeout","alwaysUse","full","large","med","thumb","select","helperText","pos","MenuItem_default","App","getRoutes","Route","render","Switch","InMemoryCache","ApolloClient","link","HttpLink","uri","hist","createBrowserHistory","ReactDOM","Router","src_App_0","Redirect","from"],"mappings":"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","file":"static/js/main.07046178.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport const FaceCard = styled.div`\n  text-align: center;\n  color: #fff;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.23);\n  z-index: 1;\n`;\n\nexport const NameSection = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  background: #353131;\n  padding: 0 10px;\n  text-transform: capitalize;\n  margin-bottom: 10px;\n  a {\n    margin-left: 10px;\n    &:hover svg {\n      stroke: #16cabd;\n    }\n  }\n`;\n\nexport const StyledHeader = styled.header`\n  background: rgb(251, 254, 207);\n  background: transparent;\n  width: 100%;\n  height: 50px;\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 10;\n`;\nexport const Nav = styled.nav`\n  display: flex;\n`;\n\nexport const StyledPaper = styled(Paper)`\n  && {\n    background: transparent;\n    margin: 0 2rem;\n    /* padding: 1rem 3rem 3rem 3rem; */\n    height: ${props => (props.height ? props.height : \"auto\")};\n  }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  width: 128px;\n  height: 128px;\n`;\n\nexport const SearchBar = styled.form`\n  display: flex;\n  align-items: center;\n  margin-right: 4rem;\n`;\n\nexport const ScrollContainer = styled(Grid)`\n  height: 90vh;\n  overflow-y: scroll;\n`;\n\nexport const MobileNav = styled(Paper)`\n  position: absolute;\n  left: 27px;\n  top: 52px;\n  z-index: 10;\n`;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { StyledHeader, MobileNav } from \"../StyledComponents/StyledComponents\";\n\nexport default function Header({ history, children }) {\n  const [open, setOpen] = useState(false);\n  const navigate = path => {\n    history.push(path);\n    setOpen(false);\n  };\n\n  return (\n    <StyledHeader>\n      <Hidden xsDown>\n        <div>\n          {routes.map((route, i) => (\n            <Link\n              to={route.path}\n              key={i}\n              style={{ marginRight: \"20px\" }}\n              className={\n                route.path === history.location.pathname ? \"current\" : \"\"\n              }\n            >\n              {route.name}\n            </Link>\n          ))}\n        </div>\n      </Hidden>\n      <Hidden smUp>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={() => setOpen(!open)}\n        >\n          <MenuIcon />\n        </IconButton>\n        {open === true && (\n          <MobileNav>\n            <List>\n              {routes.map((route, i) => (\n                <ListItem\n                  key={i}\n                  onClick={() => navigate(route.path)}\n                  className=\"pointer menu-item\"\n                >\n                  {route.name}\n                </ListItem>\n              ))}\n            </List>\n          </MobileNav>\n        )}\n      </Hidden>\n      {children}\n    </StyledHeader>\n  );\n}\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nclass Notify extends React.Component {\n  state = {\n    open: this.props.open\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.open !== this.props.open) {\n      this.setState({ open: this.props.open });\n    }\n  }\n\n  handleClick = state => () => {\n    this.setState({ open: true, ...state });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Snackbar\n          autoHideDuration={1000}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n          open={this.state.open}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{this.props.message}</span>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Notify;\n","import gql from \"graphql-tag\";\n\nexport const GET_EMPLOYEES = gql`\n  query($limit: Int, $offset: Int, $search: String) {\n    employees(\n      where: { full_name: { _ilike: $search } }\n      limit: $limit\n      offset: $offset\n      order_by: { last_name: asc }\n    ) {\n      id\n      email\n      gender\n      first_name\n      last_name\n      full_name\n      phone\n      position\n      positionByPosition {\n        departmentByDepartment {\n          name\n        }\n        title\n      }\n      pic_large\n      pic_med\n      pic_thumb\n    }\n\n    positions {\n      id\n      title\n    }\n  }\n`;\n\nexport const ADD_EMPLOYEE = gql`\n  mutation addEmployee(\n    $email: String!\n    $first: String!\n    $last: String!\n    $full: String!\n    $gender: String!\n    $phone: String!\n    $large: String!\n    $med: String!\n    $thumb: String!\n    $position: Int!\n  ) {\n    insert_employees(\n      objects: {\n        email: $email\n        first_name: $first\n        full_name: $full\n        gender: $gender\n        last_name: $last\n        phone: $phone\n        pic_large: $large\n        pic_med: $med\n        pic_thumb: $thumb\n        position: $position\n      }\n    ) {\n      returning {\n        id\n        email\n        gender\n        first_name\n        last_name\n        full_name\n        phone\n        position\n        positionByPosition {\n          departmentByDepartment {\n            name\n          }\n          title\n        }\n        pic_large\n        pic_med\n        pic_thumb\n      }\n    }\n  }\n`;\n/* Technically we should be able touse the same mutation from ADD_EMPLOYEE \nand just omit the id variable; however, there is a bug in GraphQL Engine (hasura)\n where id is expected to be non-null no matter what you set the variable to.  So\n the solution for this edge case is to be a little less DRY until an upcoming\n release is available to fix.\n*/\nexport const UPDATE_EMPLOYEE = gql`\n  mutation updateEmployee(\n    $id: Int!\n    $email: String!\n    $first: String!\n    $last: String!\n    $full: String!\n    $gender: String!\n    $phone: String!\n    $large: String!\n    $med: String!\n    $thumb: String!\n    $position: Int!\n  ) {\n    insert_employees(\n      objects: {\n        id: $id\n        email: $email\n        first_name: $first\n        full_name: $full\n        gender: $gender\n        last_name: $last\n        phone: $phone\n        pic_large: $large\n        pic_med: $med\n        pic_thumb: $thumb\n        position: $position\n      }\n      on_conflict: {\n        constraint: employees_pkey\n        update_columns: [\n          email\n          first_name\n          full_name\n          gender\n          phone\n          last_name\n          pic_large\n          pic_med\n          pic_thumb\n          position\n        ]\n      }\n    ) {\n      returning {\n        id\n        email\n        gender\n        first_name\n        last_name\n        full_name\n        phone\n        position\n        positionByPosition {\n          departmentByDepartment {\n            name\n          }\n          title\n        }\n        pic_large\n        pic_med\n        pic_thumb\n      }\n    }\n  }\n`;\n\nexport const DEPARTMENTS = gql`\n  query getDepartments {\n    departments {\n      id\n      name\n      positions {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ADD_DEPARTMENT = gql`\n  mutation($name: String!) {\n    insert_departments(objects: { name: $name }) {\n      returning {\n        id\n        name\n        positions {\n          id\n          title\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_POSITION = gql`\n  mutation($dept: Int!, $title: String!) {\n    insert_positions(objects: { department: $dept, title: $title }) {\n      returning {\n        id\n        department\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport {\n  FaceCard,\n  NameSection,\n  StyledPaper\n} from \"../StyledComponents/StyledComponents\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst Placeholders = () => (\n  <FaceCard>\n    <NameSection>\n      <p />\n    </NameSection>\n    <ContentLoader\n      height={65}\n      width={100}\n      speed={4}\n      primaryColor=\"rgba(219,241,191,.8)\"\n      secondaryColor=\"#fff\"\n    >\n      <circle cx=\"50\" cy=\"20\" r=\"18\" />\n      <rect x=\"10\" y=\"45\" rx=\"4\" ry=\"4\" width=\"80\" height=\"3\" />\n      <rect x=\"10\" y=\"55\" rx=\"3\" ry=\"3\" width=\"80\" height=\"3\" />\n    </ContentLoader>\n  </FaceCard>\n);\n\nconst Loader = ({ amount, bottom }) => {\n  const items = new Array(amount).fill(<Placeholders />);\n\n  return bottom ? (\n    items.map((item, index) => (\n      <Fade in key={index} timeout={{ enter: 100, exit: 700 }}>\n        <Grid item xs={12} sm={6} md={4}>\n          {item}\n        </Grid>\n      </Fade>\n    ))\n  ) : (\n    <StyledPaper elevation={0} style={{ marginTop: \"76px\" }}>\n      <Grid\n        container\n        spacing={24}\n        style={{ height: \"80vh\", overflowY: \"scroll\" }}\n      >\n        {items.map((item, index) => (\n          <Fade in key={index} timeout={{ enter: 100, exit: 700 }}>\n            <Grid item xs={12} sm={6} md={4}>\n              {item}\n            </Grid>\n          </Fade>\n        ))}\n      </Grid>\n    </StyledPaper>\n  );\n};\n\nexport default Loader;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { FiMail, FiPhone, FiPlusCircle, FiEdit } from \"react-icons/fi\";\nimport Loader from \"../components/Loader/Loader\";\nimport {\n  ScrollContainer,\n  FaceCard,\n  NameSection,\n  StyledPaper,\n  Avatar,\n  SearchBar\n} from \"../components/StyledComponents/StyledComponents\";\nimport Header from \"../components/Header/Header\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { GET_EMPLOYEES, ADD_EMPLOYEE, UPDATE_EMPLOYEE } from \"../graphql\";\nconst InfoSection = ({ dept, position }) => (\n  <div>\n    <p>{dept}</p>\n    <p>{position}</p>\n  </div>\n);\n\nexport default function Employees({ client, history }) {\n  const [employeeList, setEmployeeList] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [selected, setSelected] = useState(\"\");\n  const [mode, setMode] = useState(\"Add\");\n  const [id, setId] = useState(null);\n  const [index, setIndex] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [topLoader, setTopLoader] = useState(true);\n  const [bottomLoader, setBottomLoader] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [dialog, setDialog] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [first, setFirst] = useState(\"\");\n  const [last, setLast] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n\n  const fetchData = async (searching = false) => {\n    let {\n      data: { employees },\n      data: { positions },\n      loading\n    } = await client.query({\n      query: GET_EMPLOYEES,\n      variables: {\n        limit: searching === true ? null : 12,\n        offset: searching === true ? 0 : offset,\n        search: searching === true ? `%${search}%` : null\n      }\n    });\n    setPositions(positions);\n    setTopLoader(loading);\n    setBottomLoader(loading);\n    let employeeArray =\n      searching === true ? [...employees] : [...employeeList, ...employees];\n\n    setEmployeeList(employeeArray);\n\n    if (searching === false) {\n      setOffset(offset + 12);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const clearSearch = e => {\n    setSearch(\"\");\n    document.getElementById(\"searchField\").value = \"\";\n    fetchData();\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchData(true);\n  };\n\n  const handleScroll = e => {\n    if (search.length === 0) {\n      const scrolled = e.target.scrollHeight - e.target.scrollTop;\n      const height = e.target.clientHeight;\n      const bottom = scrolled === height;\n\n      if (bottom) {\n        setBottomLoader(true);\n        fetchData();\n      }\n    }\n  };\n\n  if (topLoader) return <Loader amount={9} />;\n\n  return (\n    <Fragment>\n      <Header history={history}>\n        <SearchBar onSubmit={handleSearch}>\n          <Tooltip title=\"Add Employee\" placement=\"left-start\">\n            <IconButton\n              aria-label=\"Add Employee\"\n              onClick={() => {\n                setDialog(true);\n              }}\n            >\n              <FiPlusCircle size=\"30\" />\n            </IconButton>\n          </Tooltip>\n          <TextField\n            id=\"searchField\"\n            variant=\"outlined\"\n            InputProps={{\n              startAdornment: search.length ? (\n                <InputAdornment position=\"start\">\n                  <Tooltip title=\"Clear search\">\n                    <CloseIcon\n                      className=\"pointer\"\n                      onClick={() => clearSearch()}\n                    />\n                  </Tooltip>\n                </InputAdornment>\n              ) : (\n                <InputAdornment position=\"start\">\n                  <SearchIcon className=\"under-menu\" />\n                </InputAdornment>\n              )\n            }}\n            defaultValue={search}\n            onChange={e => setSearch(e.target.value)}\n          />\n          <Button type=\"submit\" disabled={!search.length}>\n            Search\n          </Button>\n        </SearchBar>\n      </Header>\n      <StyledPaper elevation={0}>\n        <ScrollContainer container spacing={24} onScroll={handleScroll}>\n          {employeeList.length === 0 ? (\n            <Fade in timeout={{ enter: 100, exit: 700 }}>\n              <h1>No results</h1>\n            </Fade>\n          ) : (\n            employeeList.map((employee, index) => (\n              <Fade in key={index} timeout={{ enter: 100, exit: 700 }}>\n                <Grid item xs={12} sm={6} md={4}>\n                  <FaceCard className={employee.updated && \"updated\"}>\n                    <NameSection>\n                      <p>{`${employee.first_name} ${employee.last_name} `}</p>\n                      <div>\n                        <a href={`tel:${employee.phone}`}>\n                          <FiPhone color=\"#fff\" size=\"20px\" />\n                        </a>\n                        <a href={`mailto:${employee.email}`}>\n                          <FiMail color=\"#fff\" size=\"20px\" />\n                        </a>\n                      </div>\n                    </NameSection>\n                    <Avatar src={employee.pic_large} alt={employee.email} />\n\n                    <InfoSection\n                      dept={\n                        employee.positionByPosition.departmentByDepartment.name\n                      }\n                      position={employee.positionByPosition.title}\n                    />\n                    <Tooltip title=\"Edit Employee\" placement=\"left-start\">\n                      <IconButton\n                        aria-label=\"Edit Employee\"\n                        onClick={() => {\n                          setId(employee.id);\n                          setIndex(index);\n                          setEmail(employee.email);\n                          setFirst(employee.first_name);\n                          setLast(employee.last_name);\n                          setGender(employee.gender);\n                          setPhone(employee.phone);\n                          setPhoto(employee.pic_large);\n                          setSelected(employee.position);\n                          setMode(\"Edit\");\n                          setDialog(true);\n                        }}\n                      >\n                        <FiEdit color=\"353131\" size=\"20px\" />\n                      </IconButton>\n                    </Tooltip>\n                  </FaceCard>\n                </Grid>\n              </Fade>\n            ))\n          )}\n          {bottomLoader && <Loader amount={5} bottom />}\n        </ScrollContainer>\n        <Dialog\n          open={dialog}\n          // onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add a Employee</DialogTitle>\n\n          <Mutation\n            mutation={mode === \"Add\" ? ADD_EMPLOYEE : UPDATE_EMPLOYEE}\n            update={(\n              cache,\n              {\n                data: {\n                  insert_employees: { returning }\n                }\n              }\n            ) => {\n              let updated = [...employeeList];\n              if (index !== \"\") {\n                updated[index] = { ...returning[0], updated: true };\n                setEmployeeList(updated);\n              } else {\n                setEmployeeList([{ ...returning[0], updated: true }]);\n                setTimeout(() => {\n                  setEmployeeList([returning[0], ...employeeList]);\n                }, 3000);\n              }\n              setDialog(false);\n              setId(\"\");\n              setIndex(\"\");\n              setEmail(\"\");\n              setFirst(\"\");\n              setLast(\"\");\n              setGender(\"\");\n              setPhone(\"\");\n              setPhoto(\"\");\n              setSelected(\"\");\n              setMode(\"Add\");\n            }}\n          >\n            {add => (\n              <div>\n                <form\n                  onSubmit={e => {\n                    e.preventDefault();\n                    const alwaysUse = {\n                      email,\n                      first,\n                      last,\n                      full: `${first} ${last}`,\n                      gender,\n                      phone,\n                      large: photo,\n                      med: photo,\n                      thumb: photo,\n                      position: selected\n                    };\n                    const variables =\n                      mode === \"Add\" ? { ...alwaysUse } : { id, ...alwaysUse };\n                    add({\n                      variables\n                    });\n                  }}\n                >\n                  <DialogContent>\n                    <Grid container spacing={24}>\n                      <Grid item xs={6}>\n                        <TextField\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"email\"\n                          label=\"Email\"\n                          type=\"email\"\n                          fullWidth\n                          defaultValue={email}\n                          onChange={e => setEmail(e.target.value)}\n                        />\n                        <TextField\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"first\"\n                          label=\"First Name\"\n                          type=\"text\"\n                          fullWidth\n                          defaultValue={first}\n                          onChange={e => setFirst(e.target.value)}\n                        />\n                        <TextField\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"last\"\n                          label=\"Last Name\"\n                          type=\"text\"\n                          fullWidth\n                          defaultValue={last}\n                          onChange={e => setLast(e.target.value)}\n                        />\n                        <TextField\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"gender\"\n                          label=\"Gender\"\n                          type=\"text\"\n                          fullWidth\n                          defaultValue={gender}\n                          onChange={e => setGender(e.target.value)}\n                        />\n                        <TextField\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"phone\"\n                          label=\"Phone\"\n                          type=\"text\"\n                          fullWidth\n                          defaultValue={phone}\n                          onChange={e => setPhone(e.target.value)}\n                        />\n                        <TextField\n                          autoFocus\n                          margin=\"dense\"\n                          id=\"pic\"\n                          label=\"Photo URL\"\n                          type=\"text\"\n                          fullWidth\n                          defaultValue={photo}\n                          onChange={e => setPhoto(e.target.value)}\n                        />\n                      </Grid>\n                      <Grid item xs={6}>\n                        <TextField\n                          id=\"position\"\n                          select\n                          fullWidth\n                          label=\"Select\"\n                          value={selected}\n                          onChange={e => setSelected(e.target.value)}\n                          helperText=\"Select position\"\n                          margin=\"normal\"\n                        >\n                          {positions.map(pos => (\n                            <MenuItem key={pos.id} value={pos.id}>\n                              {pos.title}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                      </Grid>\n                    </Grid>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button type=\"submit\" color=\"primary\">\n                      {mode} Employee\n                    </Button>\n                    <Button onClick={() => setDialog(false)} color=\"primary\">\n                      Cancel\n                    </Button>\n                  </DialogActions>\n                </form>\n              </div>\n            )}\n          </Mutation>\n        </Dialog>\n      </StyledPaper>\n    </Fragment>\n  );\n}\n","import Admin from \"./pages/Admin\";\nimport Employees from \"./pages/Employees\";\n\nconst routes = [\n  {\n    path: \"/employee-directory/admin\",\n    name: \"Admin\",\n    component: Admin\n  },\n  {\n    path: \"/employee-directory\",\n    name: \"Employees\",\n    component: Employees\n  }\n];\n\nexport default routes;\n","import React, { useState, Fragment } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Header from \"../components/Header/Header\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { FiPlusCircle } from \"react-icons/fi\";\nimport Notify from \"../components/Notify/Notify\";\nimport {\n  StyledPaper,\n  ScrollContainer\n} from \"../components/StyledComponents/StyledComponents\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { DEPARTMENTS, ADD_DEPARTMENT, ADD_POSITION } from \"../graphql\";\n\nexport default function Admin({ history }) {\n  const [text, setText] = useState(\"\");\n  const [departmentID, setDepartmentID] = useState(\"\");\n  const [dialog, setDialog] = useState({ open: false, type: \"\" });\n  const [notify, setNotify] = useState({ open: false, message: \"\" });\n\n  return (\n    <Fragment>\n      <Header history={history} />\n      <StyledPaper elevation={0}>\n        <Fade in timeout={{ enter: 700, exit: 700 }}>\n          <ScrollContainer container spacing={8}>\n            <Grid item xs={12}>\n              <h1>\n                Departments\n                <Tooltip title=\"Add Department\">\n                  <IconButton\n                    aria-label=\"Add Department\"\n                    onClick={() => setDialog({ open: true, type: \"dept\" })}\n                  >\n                    <FiPlusCircle size=\"30\" />\n                  </IconButton>\n                </Tooltip>\n              </h1>\n            </Grid>\n            <Query query={DEPARTMENTS}>\n              {({ data: { departments }, loading, error }) => {\n                if (loading) return \"loading...\";\n                if (error) return error;\n                return departments.map(dept => (\n                  <Grid item xs={12} md={6} lg={4} key={dept.id}>\n                    <List>\n                      <h2>\n                        {dept.name}\n                        <Tooltip\n                          title={`Add position to ${dept.name}`}\n                          placement=\"right-end\"\n                        >\n                          <IconButton\n                            aria-label={`Add position to ${dept.name}`}\n                            onClick={() => {\n                              setDialog({\n                                open: true,\n                                type: \"pos\"\n                              });\n                              setDepartmentID(dept.id);\n                            }}\n                          >\n                            <FiPlusCircle size=\"30\" />\n                          </IconButton>\n                        </Tooltip>\n                      </h2>\n\n                      {dept.positions.length > 0 &&\n                        dept.positions.map(position => (\n                          <ListItem key={position.id}>\n                            {position.title}\n                          </ListItem>\n                        ))}\n                    </List>\n                  </Grid>\n                ));\n              }}\n            </Query>\n          </ScrollContainer>\n        </Fade>\n        <Dialog open={dialog.open} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">\n            Add a {dialog.type === \"dept\" ? \"Department\" : \"Position\"}\n          </DialogTitle>\n\n          <Mutation\n            mutation={dialog.type === \"dept\" ? ADD_DEPARTMENT : ADD_POSITION}\n            update={\n              dialog.type === \"dept\"\n                ? (\n                    cache,\n                    {\n                      data: {\n                        insert_departments: { returning }\n                      }\n                    }\n                  ) => {\n                    const { departments } = cache.readQuery({\n                      query: DEPARTMENTS\n                    });\n                    cache.writeQuery({\n                      query: DEPARTMENTS,\n                      data: { departments: [...departments, ...returning] }\n                    });\n                    setDialog({\n                      open: false,\n                      type: \"\"\n                    });\n                    setNotify({\n                      open: true,\n                      message: `${text} has been created!`\n                    });\n                  }\n                : (\n                    cache,\n                    {\n                      data: {\n                        insert_positions: { returning }\n                      }\n                    }\n                  ) => {\n                    const { departments } = cache.readQuery({\n                      query: DEPARTMENTS\n                    });\n                    let updated = departments;\n                    const index = updated.findIndex(\n                      dept => dept.id === returning[0].department\n                    );\n                    const { id, title } = returning[0];\n                    updated[index].positions.push({\n                      id,\n                      title,\n                      __typename: \"positions\"\n                    });\n                    console.log(updated);\n                    cache.writeQuery({\n                      query: DEPARTMENTS,\n                      data: { departments: [...updated] }\n                    });\n                    setDialog({\n                      open: false,\n                      type: \"\"\n                    });\n                  }\n            }\n          >\n            {add => (\n              <div>\n                <form\n                  onSubmit={e => {\n                    e.preventDefault();\n                    if (dialog.type === \"dept\") {\n                      add({ variables: { name: text } });\n                    } else {\n                      add({\n                        variables: {\n                          title: text,\n                          dept: departmentID\n                        }\n                      });\n                      setNotify({\n                        open: true,\n                        message: `${text} has been created!`\n                      });\n                    }\n                    setDepartmentID(\"\");\n                    setText(\"\");\n                  }}\n                >\n                  <DialogContent>\n                    <TextField\n                      autoFocus\n                      margin=\"dense\"\n                      id={dialog.type === \"dept\" ? \"department\" : \"position\"}\n                      label={\n                        dialog.type === \"dept\"\n                          ? \"New Department\"\n                          : \"New Position\"\n                      }\n                      type=\"text\"\n                      fullWidth\n                      defaultValue={text}\n                      onChange={e => setText(e.target.value)}\n                    />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button type=\"submit\" color=\"primary\">\n                      Add {dialog.type === \"dept\" ? \"Department\" : \"Position\"}\n                    </Button>\n                    <Button\n                      onClick={() => setDialog({ open: false, type: \"\" })}\n                      color=\"primary\"\n                    >\n                      Cancel\n                    </Button>\n                  </DialogActions>\n                </form>\n              </div>\n            )}\n          </Mutation>\n        </Dialog>\n        <Notify open={notify.open} message={notify.message} />\n      </StyledPaper>\n    </Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport routes from \"./routes\";\n\nclass App extends Component {\n  state = {\n    ...this.props\n  };\n\n  getRoutes = routes => {\n    return routes.map((route, key) => {\n      return (\n        <Route\n          path={route.path}\n          render={() => <route.component {...this.state} />}\n          key={key}\n        />\n      );\n    });\n  };\n\n  render() {\n    return <Switch>{this.getRoutes(routes)}</Switch>;\n  }\n}\n\nexport default App;\n","/* eslint-disable no-unused-vars */\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\nconst uri = \"https://pl-employee-dir.herokuapp.com/v1alpha1/graphql\";\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  cache,\n  link: new HttpLink({\n    uri\n  })\n});\n","/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { client } from \"./apollo\";\nimport { ApolloProvider } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router history={hist}>\n      <Switch>\n        <Route\n          path=\"/\"\n          render={({ history }) => <App client={client} history={history} />}\n        />\n        <Redirect from=\"/\" to=\"/employees\" />\n      </Switch>\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}